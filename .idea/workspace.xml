<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fc8c23d9-3109-42b5-bb24-a49bd0904157" name="Changes" comment="Implémenté non testéccezaec">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <list id="da62b2b3-515b-4ff1-b90f-9cae1cc66d46" name="Changes by voire" comment="">
      <change beforePath="$PROJECT_DIR$/app-base/frontend.go" beforeDir="false" afterPath="$PROJECT_DIR$/app-base/frontend.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.22.3" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="exclusionmutuelle2" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitLabMergeRequestFiltersHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPENED&quot;,
    &quot;assignee&quot;: {
      &quot;type&quot;: &quot;org.jetbrains.plugins.gitlab.mergerequest.ui.filters.GitLabMergeRequestsFiltersValue.MergeRequestsMemberFilterValue.MergeRequestsAssigneeFilterValue&quot;,
      &quot;username&quot;: &quot;bureauma&quot;,
      &quot;fullname&quot;: &quot;Marius Bureau&quot;
    }
  }
}</component>
  <component name="GitLabMergeRequestsSettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;first&quot;: &quot;https://gitlab.utc.fr/sr05_project/pixel-war.git&quot;,
    &quot;second&quot;: &quot;2a7bea8b-78d9-4f46-8b2e-f45d526fab46&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2g9qxCh4tbftqwZOpgCzIyhH6t4" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.go build app-base.executor": "Run",
    "Go Build.go build base.go.executor": "Run",
    "Go Build.go build pixel-war/.executor": "Run",
    "Go Build.go build services.go.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "implementUI",
    "go.import.settings.migrated": "true",
    "last_opened_file_path": "C:/Users/Dev/Desktop/Projet SR05/pixel-war/app-base",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Dev\Desktop\Projet SR05\pixel-war\app-base" />
      <recent name="C:\Users\Dev\Desktop\Projet SR05\pixel-war\utils" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build app-base">
    <configuration name="go build Game.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="pixel-war" />
      <working_directory value="$PROJECT_DIR$/app-base" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/app-base/Game.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build app-base" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="pixel-war" />
      <working_directory value="$PROJECT_DIR$/app-base" />
      <kind value="PACKAGE" />
      <package value="app-base" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build base.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="pixel-war" />
      <working_directory value="$PROJECT_DIR$/app-base" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/app-base/base.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build pixel-war" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="pixel-war" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build pixel-war/" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="pixel-war" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build services.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="pixel-war" />
      <working_directory value="$PROJECT_DIR$/utils" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/utils/services.go" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build pixel-war" />
      <item itemvalue="Go Build.go build pixel-war/" />
      <item itemvalue="Go Build.go build Game.go" />
      <item itemvalue="Go Build.go build app-base" />
      <item itemvalue="Go Build.go build base.go" />
      <item itemvalue="Go Build.go build services.go" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build app-base" />
        <item itemvalue="Go Build.go build pixel-war/" />
        <item itemvalue="Go Build.go build Game.go" />
        <item itemvalue="Go Build.go build base.go" />
        <item itemvalue="Go Build.go build services.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.15989.157" />
        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-GO-241.15989.157" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Implémenté non testé" />
    <MESSAGE value="Implémenté non testéccezaec" />
    <option name="LAST_COMMIT_MESSAGE" value="Implémenté non testéccezaec" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>